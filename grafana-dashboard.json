{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 13,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddw77rdbpmg3kf"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#f9f9fb",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "infinitePan": false,
        "inlineEditing": true,
        "panZoom": false,
        "root": {
          "background": {
            "color": {
              "fixed": "transparent"
            }
          },
          "border": {
            "color": {
              "fixed": "dark-green"
            }
          },
          "constraint": {
            "horizontal": "left",
            "vertical": "top"
          },
          "elements": [
            {
              "background": {
                "color": {
                  "fixed": "transparent"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "text"
                },
                "size": 16,
                "text": {
                  "fixed": "Machines Status"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 1",
              "placement": {
                "height": 40,
                "left": 511,
                "top": 14,
                "width": 290
              },
              "type": "text"
            }
          ],
          "name": "Element 1724956711325",
          "placement": {
            "height": 100,
            "left": 0,
            "rotation": 0,
            "top": 0,
            "width": 100
          },
          "type": "frame"
        },
        "showAdvancedTypes": true
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddw77rdbpmg3kf"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "go_info",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "type": "canvas"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddwwf5bgfvvgge"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "boolean"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "false": {
                        "color": "light-red",
                        "index": 1,
                        "text": "Offline"
                      },
                      "true": {
                        "color": "light-green",
                        "index": 0,
                        "text": "Online"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 14,
        "x": 0,
        "y": 2
      },
      "id": 4,
      "options": {
        "infinitePan": false,
        "inlineEditing": true,
        "panZoom": false,
        "root": {
          "background": {
            "color": {
              "fixed": "transparent"
            },
            "image": {
              "field": "_value {_field=\"Filler_status\", _start=\"2024-09-03 15:08:58.816 +0000 UTC\", _stop=\"2024-09-10 15:08:58.816 +0000 UTC\"}",
              "fixed": "",
              "mode": "field"
            },
            "size": "contain"
          },
          "border": {
            "color": {
              "fixed": "dark-green"
            },
            "width": 0
          },
          "constraint": {
            "horizontal": "left",
            "vertical": "top"
          },
          "elements": [
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "#ccccdc"
                },
                "size": 16,
                "text": {
                  "fixed": "Filler",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 2",
              "placement": {
                "height": 40,
                "left": 23,
                "top": 11,
                "width": 130
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "#ccccdc"
                },
                "size": 16,
                "text": {
                  "fixed": "Capper"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 3",
              "placement": {
                "height": 40,
                "left": 320,
                "top": 11,
                "width": 126
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "rgb(204, 204, 220)"
                },
                "size": 16,
                "text": {
                  "fixed": "Labelling"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 4",
              "placement": {
                "height": 40,
                "left": 613,
                "top": 11,
                "width": 131
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "rgb(204, 204, 220)"
                },
                "size": 16,
                "text": {
                  "fixed": "Palletizer"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 5",
              "placement": {
                "height": 40,
                "left": 23,
                "top": 161,
                "width": 130
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "rgb(204, 204, 220)"
                },
                "size": 16,
                "text": {
                  "fixed": "Packing"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 6",
              "placement": {
                "height": 40,
                "left": 320,
                "top": 163,
                "width": 126
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "rgb(204, 204, 220)"
                },
                "size": 16,
                "text": {
                  "fixed": "Wrapping"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 7",
              "placement": {
                "height": 40,
                "left": 613,
                "top": 161,
                "width": 131
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Filler_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Filler_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 8",
              "placement": {
                "height": 41,
                "left": 293.7265625,
                "top": 55,
                "width": 130
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Wrapping_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Wrapping_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 9",
              "placement": {
                "height": 41,
                "left": -296.7734375,
                "top": -95,
                "width": 131
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Packaging_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Packaging_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 10",
              "placement": {
                "height": 39,
                "left": -1.2734375,
                "top": -96,
                "width": 126
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Palletizing_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Palletizing_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 11",
              "placement": {
                "height": 39,
                "left": 294.7265625,
                "top": -94,
                "width": 130
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Labeling_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Labeling_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 12",
              "placement": {
                "height": 41,
                "left": -296.7734375,
                "top": 55,
                "width": 131
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                },
                "image": {
                  "field": "",
                  "fixed": "",
                  "mode": "fixed"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Capper_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Capper_status {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "center",
                "vertical": "center"
              },
              "name": "Element 13",
              "placement": {
                "height": 40,
                "left": -1.2734375,
                "top": 55.5,
                "width": 126
              },
              "type": "metric-value"
            }
          ],
          "name": "Element 1724915005308",
          "placement": {
            "height": 100,
            "left": 0,
            "rotation": 0,
            "top": 0,
            "width": 100
          },
          "type": "frame"
        },
        "showAdvancedTypes": true
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "alias": "Filler",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Filler_status\") \r\n  |> yield(name: \"filler_status\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Filler_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "topic::tag",
              "operator": "=",
              "value": "home/sensor/status"
            }
          ]
        },
        {
          "alias": "Capper",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Capper_status\")\r\n  |> yield(name: \"capper_status\")\r\n",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Capper_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Labeling",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Labeling_status\")\r\n  |> yield(name: \"labeling_status\")\r\n",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Labeling_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Palletizer",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Palletizing_status\")\r\n  |> yield(name: \"palletizing_status\")\r\n",
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Palletizing_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Packing",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Packaging_status\")\r\n  |> yield(name: \"packaging_status\")\r\n",
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Packaging_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Wrapper",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field == \"Wrapping_status\")\r\n  |> yield(name: \"wrapping_status\")\r\n",
          "refId": "F",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Wrapping_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        }
      ],
      "type": "canvas"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddwwf5bgfvvgge"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "OEE"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 10,
        "x": 14,
        "y": 2
      },
      "id": 6,
      "options": {
        "infinitePan": false,
        "inlineEditing": true,
        "panZoom": false,
        "root": {
          "background": {
            "color": {
              "fixed": "transparent"
            }
          },
          "border": {
            "color": {
              "fixed": "dark-green"
            }
          },
          "constraint": {
            "horizontal": "left",
            "vertical": "top"
          },
          "elements": [
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Value",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 1",
              "placement": {
                "height": 57,
                "left": 225,
                "top": 81,
                "width": 95
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "#ccccdc"
                },
                "size": 16,
                "text": {
                  "fixed": "MTBF"
                },
                "valign": "middle"
              },
              "connections": [],
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 2",
              "placement": {
                "height": 61,
                "left": 225,
                "top": 20,
                "width": 95
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "#D9D9D9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "Total_scrap_count",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 3",
              "placement": {
                "height": 57,
                "left": 426,
                "top": 81,
                "width": 95
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "#d9d9d9"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "field": "Value",
                  "fixed": "semi-dark-green"
                },
                "size": 20,
                "text": {
                  "field": "OEE",
                  "fixed": "",
                  "mode": "field"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 4",
              "placement": {
                "height": 57,
                "left": 24,
                "top": 81,
                "width": 95
              },
              "type": "metric-value"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "#ccccdc"
                },
                "size": 16,
                "text": {
                  "fixed": "Scrap count"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 5",
              "placement": {
                "height": 61,
                "left": 426,
                "top": 20,
                "width": 95
              },
              "type": "text"
            },
            {
              "background": {
                "color": {
                  "fixed": "light-blue"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                }
              },
              "config": {
                "align": "center",
                "color": {
                  "fixed": "#ccccdc"
                },
                "size": 16,
                "text": {
                  "fixed": "OEE"
                },
                "valign": "middle"
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "name": "Element 6",
              "placement": {
                "height": 61,
                "left": 24,
                "top": 20,
                "width": 95
              },
              "type": "text"
            }
          ],
          "name": "Element 1725524539494",
          "placement": {
            "height": 100,
            "left": 0,
            "rotation": 0,
            "top": 0,
            "width": 100
          },
          "type": "frame"
        },
        "showAdvancedTypes": true
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "alias": "OEE",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [
            {
              "params": [
                "$interval"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "// Aggregate total operating time\r\ntotal_operating_time = from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /(.+)_operating_time/)\r\n  |> sum(column: \"_value\")\r\n  |> group(columns: [])     // Aggregate across all machines\r\n  |> rename(columns: {_value: \"total_operating_time\"})\r\n\r\n// Aggregate failures\r\nfailures = from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /(.*)_failure_count/)\r\n  |> sum(column: \"_value\")\r\n  |> group(columns: [])     // Aggregate across all machines\r\n  |> rename(columns: {_value: \"failures\"})\r\n\r\n// Aggregate overall scrap count\r\nscrap_count = from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Overall_scrap_count\")\r\n  |> sum(column: \"_value\")\r\n  |> group(columns: [])     // Aggregate across all machines\r\n  |> rename(columns: {_value: \"overall_scrap_count\"})\r\n\r\n// Combine aggregated results into a single table\r\ncombined = union(tables: [total_operating_time, failures, scrap_count])\r\n  |> group(columns: [])\r\n  |> reduce(\r\n    fn: (r, accumulator) => ({\r\n      total_operating_time: accumulator.total_operating_time + (if exists r.total_operating_time then float(v: r.total_operating_time) else 0.0),\r\n      failures: accumulator.failures + (if exists r.failures then float(v: r.failures) else 0.0),\r\n      overall_scrap_count: accumulator.overall_scrap_count + (if exists r.overall_scrap_count then float(v: r.overall_scrap_count) else 0.0)\r\n    }),\r\n    identity: {total_operating_time: 0.0, failures: 0.0, overall_scrap_count: 0.0}\r\n  )\r\n\r\n// Calculate OEE\r\noee = combined\r\n  |> map(fn: (r) => ({\r\n      _time: now(),\r\n      _value: if r.total_operating_time == 0.0 then 0.0 else (1.0 - (r.failures / r.total_operating_time)) * 100.0  // Simplified OEE formula\r\n  }))\r\n  |> rename(columns: {_value: \"OEE\"})\r\n  |> yield(name: \"OEE\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Labeling_status"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "MTBF",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "diskio",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "// Aggregate total operating time\r\ntotal_operating_time = from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /(.+)_operating_time/)\r\n  |> sum(column: \"_value\")\r\n  |> group(columns: [])     // Aggregate across all machines\r\n  |> rename(columns: {_value: \"total_operating_time\"})\r\n\r\n// Aggregate failures\r\nfailures = from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /(.*)_failure_count/)\r\n  |> sum(column: \"_value\")\r\n  |> group(columns: [])     // Aggregate across all machines\r\n  |> rename(columns: {_value: \"failures\"})\r\n\r\n// Combine aggregated results into a single table\r\ncombined = union(tables: [total_operating_time, failures])\r\n  |> group(columns: [])\r\n  |> reduce(\r\n    fn: (r, accumulator) => ({  // Changed the order of arguments\r\n      total_operating_time: accumulator.total_operating_time + (if exists r.total_operating_time then float(v: r.total_operating_time) else 0.0),\r\n      failures: accumulator.failures + (if exists r.failures then float(v: r.failures) else 0.0)\r\n    }),\r\n    identity: {total_operating_time: 0.0, failures: 0.0}\r\n  )\r\n\r\n// Calculate MTBF from aggregated values\r\nmtbf = combined\r\n  |> map(fn: (r) => ({\r\n      _time: now(),\r\n      _value: if r.failures == 0.0 then 0.0 else r.total_operating_time / r.failures\r\n  }))\r\n  |> yield(name: \"MTBF\")",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "io_time"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Scrap Count",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) =>\r\n    r[\"_field\"] == \"Capper_failure_count\" or\r\n    r[\"_field\"] == \"Filler_failure_count\" or\r\n    r[\"_field\"] == \"Labeling_failure_count\" or\r\n    r[\"_field\"] == \"Packaging_failure_count\" or\r\n    r[\"_field\"] == \"Palletizing_failure_count\" or\r\n    r[\"_field\"] == \"Wrapping_failure_count\")\r\n  |> group()\r\n  |> sum(column: \"_value\")\r\n  |> rename(columns: {_value: \"Total_scrap_count\"})  // Renaming for better readability\r\n",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "usage_idle"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "integral"
              }
            ]
          ],
          "tags": [
            {
              "key": "cpu::tag",
              "operator": "=",
              "value": "cpu-total"
            }
          ]
        }
      ],
      "type": "canvas"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddwwf5bgfvvgge"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "normal"
            }
          },
          "decimals": 1,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "string"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Labeling_failure_count {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Hold"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Labeling_operating_time {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Completed"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Filler_operating_time {host=\"LAPTOP-0UP59NHS\", topic=\"home/sensor/status\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "In Progress"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "In Progress",
                  "Hold",
                  "Completed"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 10,
        "x": 14,
        "y": 6
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        }
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "boltdb_writes_total",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")  // Adjust measurement name if needed\r\n  |> limit(n: 10)\r\n  |> yield(name: \"sample_data\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "counter"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Status and Work order Quality",
      "type": "histogram"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddwwf5bgfvvgge"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Filler_status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Wrapping_status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "_value",
                  "Palletizing_status"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Labeling_status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Capper_status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 14,
        "x": 0,
        "y": 9
      },
      "id": 5,
      "options": {
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "alias": "Filler",
          "datasource": {
            "type": "influxdb",
            "uid": "ddwwf5bgfvvgge"
          },
          "groupBy": [
            {
              "params": [
                "$interval"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "mqtt_consumer",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"hst1\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)  // Adjust the time range as needed\r\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r._field =~ /^(Capper_status|Filler_status|Labeling_status|Packaging_status|Palletizing_status|Wrapping_status)$/)\r\n  |> filter(fn: (r) => r._value == true)  // Consider only \"on\" (true) values\r\n  |> group(columns: [\"_field\"])  // Group by the status fields\r\n  |> count(column: \"_value\")  // Count the number of true values\r\n  |> map(fn: (r) => ({ r with _value: r._value * 30 }))  // Convert counts to runtime in minutes\r\n  |> group()  // Optional: Ungroup to aggregate overall runtime if needed\r\n  |> yield(name: \"runtime_count\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "Filler_status"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "topic::tag",
              "operator": "=",
              "value": "home/sensor/status"
            }
          ]
        }
      ],
      "title": "Machine Runtime",
      "type": "piechart"
    }
  ],
  "refresh": "auto",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "CocoCola",
  "uid": "ddwzbageko934a",
  "version": 23,
  "weekStart": ""
}